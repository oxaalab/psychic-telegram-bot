# ===========================
# Local development overrides
# ===========================
# This file is read by python-dotenv and os.getenv() via src/core/config.py:load_config().
# Anything not set here will fall back to sensible defaults inside load_config().

# -----------------
# Telegram settings
# -----------------
# TELEGRAM_BOT_TOKEN is required for the bot to initialize and set the webhook.
# If it's empty or obviously placeholder, the app runs in "API-only" mode
# (see core.bot._plausible_token / create_app()).
TELEGRAM_BOT_TOKEN=8270415919:AAGcG_TWUUQUgdU52YuI1hw0poM-GkZ6THY

# Base URL that Telegram will call for your webhook. Must be publicly reachable.
# create_app() composes: {PUBLIC_BASE_URL}/{WEBHOOK_SECRET_PATH}
PUBLIC_BASE_URL=https://e3df8af5a5fd.ngrok.app

# Path segment for the webhook endpoint. Keep it non-guessable to reduce noise.
# The FastAPI route is mounted at "/{WEBHOOK_SECRET_PATH}".
WEBHOOK_SECRET_PATH=webhook/psychic

# Optional: when set, FastAPI requires X-Telegram-Bot-Api-Secret-Token to match.
# create_app() passes this to bot.set_webhook(secret_token=...).
# Leave empty to disable header verification (NOT recommended on public endpoints).
WEBHOOK_SECRET_TOKEN=replace-with-strong-random-string

# ----------------------------
# Database (MariaDB/MySQL) URL
# ----------------------------
# Used by SQLAlchemy async engine in core.db.init_db().
# Format: mysql+asyncmy://USER:PASSWORD@HOST:PORT/DBNAME?charset=utf8mb4
# NOTE: The migration runner will create DB/tables as needed (db/migrator/runner.sh).
DATABASE_URL="mysql+asyncmy://okobots_user:Password1@localhost:3307/welcome?charset=utf8mb4"

# --------
# Logging
# --------
# One of DEBUG, INFO, WARNING, ERROR. See src/main.py _configure_logging().
LOG_LEVEL=INFO

# ---------------------------------------------
# Access control: restrict who can trigger stuff
# ---------------------------------------------
# Optional: comma OR space separated numeric Telegram chat IDs allowed to trigger welcomes, etc.
# Empty => allow all chats. Parsed by _get_id_list() in core/config.py.
ALLOWED_CHAT_IDS=

# --------------------------
# HTTP server bind & porting
# --------------------------
# APP_HOST / HOST: address for uvicorn to bind (defaults to 0.0.0.0 if unset).
# APP_PORT / PORT: port for uvicorn (APP_PORT wins; defaults to 50042).
# Uncomment to override defaults locally:
# APP_HOST=127.0.0.1
APP_PORT=50011

# -----------------------------
# Background name-change scanner
# -----------------------------
# Periodically scans a batch of known members and announces changes.
# These map directly to fields in AppConfig (see core/config.py).
SCAN_ENABLED=true            # enable/disable the periodic scanner
SCAN_INTERVAL_SECS=15        # seconds between scan ticks (min 10s enforced in code)
SCAN_BATCH_SIZE=100          # max members checked per tick

# Optional fine-tuning (defaults shown in comments):
# First delay before first scan (seconds). Helps the bot start quickly.
# SCAN_FIRST_DELAY_SECS=5
# Soft rate limit for Telegram API calls (max requests per second).
# SCAN_MAX_RPS=15
# Extra seconds to add after RetryAfter from Telegram to be polite.
# SCAN_RETRY_AFTER_LEEWAY_SECS=1
